//      Oppgave 1 - Dataoverføring

ldi r17,3

ldi r18,5

mov r0,r18

out DDRB,r17

in r0,DDRB

sts 0x0100,r18

lds r1,0x0100

st X+,r18

ld r16,x

push r16

lds r16,99

pop r16
nop

//      Oppgave 2 - addisjon

ldi r16,127
ldi r17,129
adc r17,r16

/*Sum er egentlig 256/0x100, men får ikke plass i 8 bit.
Ser at carry blir satt*/

ldi r16,80
ldi r17,48
add r17,r16

/*Får 0x80/128/-128. Negative flag blir satt pga bit 7. Two complement overflow
er satt siden resultatet har endret fortegn.*/

ldi r16,128
ldi r17,40
add r17,r16

/*Her får vi (-)168/0x80. Negativ flag satt pga bit 7. Sign flag gitt ettersom
resultatet er negativt, dersom en regner med signed (i 8-bit signed nummer, representerer
en bit signed bit) */

ldi r16,254
ldi r17,255
add r17,r16
/*Får ikke plass i 8-bit, carry satt. Resultatet blir negativt om signed regnes med.
Half carry er på.*/

ldi r28,low(1000)
ldi r29,low(500)
add r28,r29
ldi r29,high(1000)
ldi r30,high(500)
adc r29,r30
nop
//Her får vi 0x05DC, som er 1500.
adiw r29:r28, 50 //Legger direkte til en verdi på 50 i registrene r29:r28
//Får da 0x060e = 1550.

//	Oppgave 3 - løkker og forsinkelse
	sbi  DDRB,DDB5  
		

main_loop:
	ldi  r18,4     
outer_loop:
	ldi  r17,249   
middle_loop:
	ldi  r16,250   
inner_loop:
	nop            
	dec  r16      
	brne inner_loop  

	nop            
	dec  r17       
	brne middle_loop 

	nop            
	dec  r18      
	brne outer_loop 

	sbi  PINB,PINB5  
rjmp main_loop